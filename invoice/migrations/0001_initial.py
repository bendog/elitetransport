# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-21 12:19
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('abn', models.BigIntegerField(unique=True)),
                ('pricepersticker', models.DecimalField(decimal_places=2, max_digits=3)),
                ('contactname', models.CharField(blank=True, max_length=100)),
                ('contactphone', models.CharField(blank=True, max_length=10)),
                ('billingaddress', models.TextField(blank=True)),
                ('billingemail', models.EmailField(blank=True, max_length=254)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('address', models.CharField(max_length=250, unique=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StickerOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.datetime.today)),
                ('qty', models.PositiveSmallIntegerField(choices=[(25, '25'), (50, '50'), (100, '100')], default=50)),
                ('stickerstart', models.BigIntegerField()),
                ('stickerend', models.BigIntegerField()),
                ('signed', models.NullBooleanField()),
                ('printed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.Company')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.Location')),
            ],
            options={
                'ordering': ['company'],
            },
        ),
        migrations.CreateModel(
            name='Suburb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('postcode', models.PositiveSmallIntegerField()),
                ('state', models.CharField(choices=[('ACT', 'ACT'), ('NSW', 'NSW'), ('NT', 'NT'), ('QLD', 'QLD'), ('SA', 'SA'), ('TAS', 'TAS'), ('VIC', 'VIC'), ('WA', 'WA')], default='WA', max_length=3)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='stickerorder',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.Store'),
        ),
        migrations.AddField(
            model_name='location',
            name='suburb',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.Suburb'),
        ),
        migrations.AlterUniqueTogether(
            name='stickerorder',
            unique_together=set([('store', 'stickerstart'), ('store', 'stickerend')]),
        ),
    ]
